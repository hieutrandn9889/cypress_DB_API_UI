name: run-on-docker
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [main]
env:
  NODE_ENV: test
  DATABASE_URL: postgres://postgres:Saobang9889@postgres:5432/pokemonDB

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    postgres-job:
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: pokemonDB
          POSTGRES_PASSWORD: Saobang9889
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 16.13.2
          cache: yarn

      - name: Install packages
        run: yarn install --frozen-lockfile

      # Save build for other jobs
      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: the-build
          if-no-files-found: error
          path: build
          retention-days: 1

  # e2e:
  #   name: e2e Tests
  #   runs-on: ubuntu-latest
  #   needs: build

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       job: [0]

  #   services:
  #     postgres:
  #       image: postgres:latest
  #       ports: ["5432:5432"]
  #       # Make sure the database is ready before we use it
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  #       # These need to be set on the service or it won't start for some reason
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: Saobang9889
  #         POSTGRES_DB: pokemonDB

  #   container: cypress/included:10.10.0

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Download the build
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: the-build
  #         path: build

  #     - name: Setup Node
  #       uses: actions/setup-node@v2.1.2
  #       with:
  #         node-version: 16.13.2
  #         cache: yarn

  #     - name: Install packages
  #       run: cd "db_api_ui" && yarn install --frozen-lockfile

  #     - name: Remove files
  #       run: |
  #         cd "db_api_ui" && yarn removeFile
  #       continue-on-error: false

  #     - name: Run Testing
  #       run: |
  #         cd "db_api_ui" && yarn runCucumber
  #       continue-on-error: false

  #     - name: Generate reports
  #       run: cd "db_api_ui" && yarn generalReport
  #       continue-on-error: false

  #     - name: Zip folder
  #       run: cd "db_api_ui" && yarn zipFolder
  #       continue-on-error: false

  #     - name: Send email
  #       run: cd "db_api_ui" && yarn sendEmail
  #       continue-on-error: false

  #     - name: Upload Cypress Screenshots
  #       uses: actions/upload-artifact@v1
  #       # Only capture images on failure
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: cypress/screenshots

  #     - name: Upload Cypress Logs
  #       uses: actions/upload-artifact@v1
  #       # Only capture logs on failure
  #       if: failure()
  #       with:
  #         name: cypress-logs
  #         path: cypress/logs

  #     - name: Upload Cypress Videos
  #       uses: actions/upload-artifact@v1
  #       # Only capture videos on failure
  #       if: failure()
  #       with:
  #         name: cypress-videos
  #         path: cypress/videos
